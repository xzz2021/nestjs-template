services:
  # nginx:
  #   image: nginx
  #   container_name: admin
  #   restart: unless-stopped
  #   # ports:
  #   #   - "4000:80"
  #   # command: ["nginx", "-g", "daemon off;"]
  #   volumes:
  #     - ./nginx/html:/usr/share/nginx/html
  #     - ./nginx/logs:/var/log/nginx
  #     # 可能需要手动复制
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   networks:
  #     - default
  #     - shared

  pgdb:
    image: 'postgres'
    command:
      - 'postgres'
    restart: always
    container_name: 'pgdb'
    # networks:
    #   - db-shared-net
    entrypoint:
      - 'docker-entrypoint.sh'
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=xzz...
    ports:
      - '2346:5432/tcp'
    volumes:
      - './postgre/data:/var/lib/postgresql/data'
      - './postgre/logs:/var/log/postgresql'

  redisdb:
    image: 'redis'
    restart: always
    container_name: 'redisdb'
    ports:
      - '9736:6379'
    volumes:
      - './redis/data:/data'
      - './redis/logs:/logs'
      - './redis/redis.conf:/usr/local/etc/redis/redis.conf'

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    restart: always
    ports:
      - '9091:9000' # 客户端 API 访问端口
      - '9090:9090' # Web 管理控制台端口
    # environment:
    #   MINIO_ROOT_USER: minioadmin
    #   MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - ./minio/data:/data
      - ./minio/config:/root/.minio
    command: server /data --console-address ":9090"
    networks:
      - default
      - shared

  # nestjs:
  #   image: node
  #   container_name: nestjs
  #   working_dir: /app
  #   volumes:
  #     - ./nestjs:/app
  #   ports:
  #     - "3000:3000"
  #   # restart: always
  #   # 容器是linux环境,prisma client要另外generate 生成linux客户端
  #   command: sh -c "npm i -g pnpm pm2 && pnpm install  && pnpm build && pnpm start:docker && tail -f /dev/null"
  #   # command: sh -c "npm i -g pnpm pm2 && pnpm install && pnpm prisma:push:pg && pnpm build && pnpm start:docker && tail -f /dev/null"
  #   networks:
  #     - default
  #     - shared

#  共享网络 以便其他compose定义的容器互相访问
networks:
  default:
  shared:
    external: true
    name: shared_net
